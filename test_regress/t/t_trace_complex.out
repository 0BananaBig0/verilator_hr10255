$version Generated by VerilatedVcd $end
$date Fri Mar 14 20:31:17 2014
 $end
$timescale 1ns $end

 $scope module top $end
  $var wire  1 7 clk $end
  $scope module $unit $end
   $var wire  1 # global_bit $end
  $upscope $end
  $scope module v $end
   $var wire  1 7 clk $end
   $var wire 32 $ cyc [31:0] $end
   $var real 64 1 v_arr_real(0) $end
   $var real 64 3 v_arr_real(1) $end
   $var wire  2 ( v_arrp [2:1] $end
   $var wire  2 ) v_arrp_arrp [2:1] $end
   $var wire  2 * v_arrp_strp [1:0] $end
   $var wire  1 8 v_arru(1) $end
   $var wire  1 9 v_arru(2) $end
   $var wire  2 + v_arru_arrp(3) [2:1] $end
   $var wire  2 , v_arru_arrp(4) [2:1] $end
   $var wire  1 : v_arru_arru(3)(1) $end
   $var wire  1 ; v_arru_arru(3)(2) $end
   $var wire  1 < v_arru_arru(4)(1) $end
   $var wire  1 = v_arru_arru(4)(2) $end
   $var wire  2 - v_arru_strp(3) [1:0] $end
   $var wire  2 . v_arru_strp(4) [1:0] $end
   $var real 64 / v_real $end
   $var wire  2 % v_strp [1:0] $end
   $var wire  4 & v_strp_strp [3:0] $end
   $var wire  2 ' v_unip_strp [1:0] $end
   $scope module p2 $end
    $var wire 32 > PARAM [31:0] $end
   $upscope $end
   $scope module p3 $end
    $var wire 32 ? PARAM [31:0] $end
   $upscope $end
   $scope module unnamedblk1 $end
    $var wire 32 5 b [31:0] $end
    $scope module unnamedblk2 $end
     $var wire 32 6 a [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
b00000000000000000000000000000000 $
b00 %
b0000 &
b00 '
b00 (
b0000 )
b0000 *
b00 +
b00 ,
b00 -
b00 .
r0 /
r0 1
r0 3
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
07
08
09
0:
0;
0<
0=
b00000000000000000000000000000010 >
b00000000000000000000000000000011 ?
#10
b00000000000000000000000000000001 $
b11 %
b1111 &
b11 '
b11 (
b1111 )
b1111 *
b11 +
b11 ,
b11 -
b11 .
r0.1 /
r0.2 1
r0.3 3
b00000000000000000000000000000101 5
b00000000000000000000000000000101 6
17
#15
07
#20
b00000000000000000000000000000010 $
b00 %
b0000 &
b00 '
b00 (
b0000 )
b0000 *
b00 +
b00 ,
b00 -
b00 .
r0.2 /
r0.4 1
r0.6 3
17
#25
07
#30
b00000000000000000000000000000011 $
b11 %
b1111 &
b11 '
b11 (
b1111 )
b1111 *
b11 +
b11 ,
b11 -
b11 .
r0.3 /
r0.6000000000000001 1
r0.8999999999999999 3
17
#35
07
#40
b00000000000000000000000000000100 $
b00 %
b0000 &
b00 '
b00 (
b0000 )
b0000 *
b00 +
b00 ,
b00 -
b00 .
r0.4 /
r0.8 1
r1.2 3
17
#45
07
#50
b00000000000000000000000000000101 $
b11 %
b1111 &
b11 '
b11 (
b1111 )
b1111 *
b11 +
b11 ,
b11 -
b11 .
r0.5 /
r1 1
r1.5 3
17
#55
07
#60
b00000000000000000000000000000110 $
b00 %
b0000 &
b00 '
b00 (
b0000 )
b0000 *
b00 +
b00 ,
b00 -
b00 .
r0.6 /
r1.2 1
r1.8 3
17
